<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  GarethHealy :: Camel Dynamic LoadBalance :: Example2 - Consumer
  %%
  Copyright (C) 2013 - 2018 Gareth Healy
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <reference id="amqPooledConnectionFactory" interface="javax.jms.ConnectionFactory"/>

    <bean id="sleeper" class="com.garethahealy.camel.dynamic.loadbalancer.examples.example2.consumer.Sleeper"/>

    <bean id="activeMQConfiguration" class="org.apache.activemq.camel.component.ActiveMQConfiguration">
        <property name="connectionFactory" ref="amqPooledConnectionFactory"/>
        <property name="concurrentConsumers" value="1"/>
    </bean>

    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq">
        <property name="configuration" ref="activeMQConfiguration"/>
    </bean>

    <camelContext id="dynamic-lb-example2-consumer-context" trace="false" xmlns="http://camel.apache.org/schema/blueprint">

        <route id="readerDynamicOne">
            <from uri="activemq:readerDynamicOne"/>
            <bean ref="sleeper" method="sleepRandomSecond"/>
            <log message="Got ${body} from readerDynamicOne"/>
            <to uri="mock:readerOneEnd"/>
        </route>

        <route id="readerDynamicTwo">
            <from uri="activemq:readerDynamicTwo"/>
            <bean ref="sleeper" method="sleepRandomSecond"/>
            <log message="Got ${body} from readerDynamicTwo"/>
            <to uri="mock:readerTwoEnd"/>
        </route>

        <route id="readerDynamicThree">
            <from uri="activemq:readerDynamicThree"/>
            <log message="Got ${body} from readerDynamicThree"/>
            <to uri="mock:readerThreeEnd"/>
        </route>

        <route id="readerRoundRobinOne">
            <from uri="activemq:readerRoundRobinOne"/>
            <bean ref="sleeper" method="sleepRandomSecond"/>
            <log message="Got ${body} from readerRoundRobinOne"/>
            <to uri="mock:readerOneEnd"/>
        </route>

        <route id="readerRoundRobinTwo">
            <from uri="activemq:readerRoundRobinTwo"/>
            <bean ref="sleeper" method="sleepRandomSecond"/>
            <log message="Got ${body} from readerRoundRobinTwo"/>
            <to uri="mock:readerTwoEnd"/>
        </route>

        <route id="readerRoundRobinThree">
            <from uri="activemq:readerRoundRobinThree"/>
            <log message="Got ${body} from readerRoundRobinThree"/>
            <to uri="mock:readerThreeEnd"/>
        </route>

    </camelContext>
</blueprint>
